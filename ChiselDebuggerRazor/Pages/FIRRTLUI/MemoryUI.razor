@inherits FIRTitleBase<Memory>

<div id="@SizeWatcherID" class="component memory combinational" style="left:@Position.X.ToPixels();top:@Position.Y.ToPixels();min-width:@GetCurrentSize().X.ToPixels();min-height:@GetCurrentSize().Y.ToPixels();">
    <div id="@TitleID" class="componentName memoryName">
        <div>Memory</div>
        <div>@Operation.Name</div>
    </div>

    <ScopedIOUI NodeIO="@NodeIO" AlwaysShowName="true"></ScopedIOUI>
</div>

@code {
    private ScopedNodeIO NodeIO = null;

    protected override Task OnFirstParametersSetAsync()
    {
        SetCurrentSize(new Point(200, 10));

        return base.OnFirstParametersSetAsync();
    }

    protected override DirectedIO[] OnMakeSinks(int width, int height)
    {
        NodeIO = IOPositionCalc.VerticalScopedIO(Operation.GetIO().ToArray(), GetCurrentSize().X, GetPaddedTitleHeight(), 10);
        SetCurrentSize(new Point(GetCurrentSize().X, NodeIO.HeightNeeded));

        return NodeIO.GetSinkDirIO();
    }

    protected override DirectedIO[] OnMakeSources(int width, int height)
    {
        return NodeIO.GetSourceDirIO();
    }
}
