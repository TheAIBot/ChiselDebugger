@using System.IO;
@inject NavigationManager Navigator
@inject CircuitFiles Files

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">ChiselDebuggerWebUI</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <InputFile id="fileInput" accept=".fir,.vcd" style="visibility: hidden; display: none;" OnChange="@LoadFiles" multiple></InputFile>
            <label for="fileInput">
                <a class="nav-link">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Load circuit
                </a>
            </label>
        </li>
        <li class="nav-item px-3">
            @foreach (var firrtlFilename in FIRRTLFilenames)
            {
                <a class="nav-link" @onclick="_ => ShowExampleCircuit(firrtlFilename)">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> @firrtlFilename
                </a>
            }
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private string[] FIRRTLFilenames = new string[0];
    private const string ExamplesFolder = "Examples";

    protected override bool ShouldRender()
    {
        return false;
    }

    protected override Task OnInitializedAsync()
    {
        if (!OperatingSystem.IsBrowser() && Directory.Exists(ExamplesFolder))
        {
            FIRRTLFilenames = Directory.GetFiles(ExamplesFolder)
                .Select(x => Path.GetFileName(x))
                .Where(x => x.EndsWith(".fir"))
                .ToArray();
        }

        return base.OnInitializedAsync();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void ShowExampleCircuit(string firrtlFilename)
    {
        string loFirPath = System.IO.Path.Combine(ExamplesFolder, firrtlFilename.Replace(".fir", ".lo.fir"));
        string hiFirPath = System.IO.Path.Combine(ExamplesFolder, firrtlFilename);

        string filenameNoExtension = firrtlFilename.Split('.').First();
        string vcdPath = System.IO.Path.Combine(ExamplesFolder, $"{filenameNoExtension}.vcd");

        Files.UpdateFromPath(hiFirPath, loFirPath, vcdPath, true);
    }

    private async void LoadFiles(InputFileChangeEventArgs e)
    {
        var files = e.GetMultipleFiles();

        await Files.UpdateFromFiles(e.GetMultipleFiles(), false);
    }
}
