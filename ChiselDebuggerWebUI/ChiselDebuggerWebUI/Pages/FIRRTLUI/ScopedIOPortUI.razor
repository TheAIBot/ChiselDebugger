<div class="ioDot" style="left:@DotPosition.X.ToPixels();top:@DotPosition.Y.ToPixels();"></div>
@if (AlwaysShowName)
{
    <div class="@IONameClass" style="left:@NamePosition.X.ToPixels();top:@NamePosition.Y.ToPixels();">@ScopedIO.DirIO.IO.Name</div>
}

@code {
    [Parameter]
    public ScopedDirIO ScopedIO { get; set; }

    [Parameter]
    public bool AlwaysShowName { get; set; } = false;

    private Point DotPosition = Point.Zero;
    private Point NamePosition = Point.Zero;
    private bool RightToLeft = false;
    private string IONameClass
    {
        get
        {
            return RightToLeft ? " ioNameRev" : "ioName";
        }
    }

    private const int DOT_RADIUS = 3;

    protected override Task OnParametersSetAsync()
    {
        //When position is set first, it represents the position of
        //the upper left corner of the dot. In order to center it
        //the radius is subtracted from the position.
        DotPosition = ScopedIO.DirIO.Position - new Point(DOT_RADIUS, DOT_RADIUS);
        NamePosition = ScopedIO.DirIO.Position + new Point(ScopedIO.ScopeXOffset, 0);

        RightToLeft = ScopedIO.DirIO.IO is Output;

        return base.OnParametersSetAsync();
    }
}
