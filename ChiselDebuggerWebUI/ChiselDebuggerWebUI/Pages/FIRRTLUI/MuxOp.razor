@inherits FIRBase<Mux>

<div id="@SizeWatcherID" class="muxContainer" style="left:@Position.X.ToPixels();top:@Position.Y.ToPixels();">
    <div class="muxShape"></div>

    @foreach (var input in InputOffsets)
    {
        <IOPortUI Position="@input.Position"></IOPortUI>
    }

    @foreach (var output in OutputOffsets)
    {
        <IOPortUI Position="@output.Position"></IOPortUI>
    }
</div>




@code
{
    private const int HEIGHT = 50;
    private const int WIDTH = 25;
    private const int INDENT = 12;
    private const int USABLE_CHOISE_HEIGHT = 25;

    protected override List<DirectedIO> OnMakeInputs(int width, int height)
    {
        List<DirectedIO> inputs = IOPositionCalc.EvenVertical(height, Operation.Choises, 0, INDENT);

        //Add chose input
        Point deciderOffset = new Point(WIDTH / 2, INDENT / 2);
        inputs.Add(new DirectedIO(Operation.Decider, deciderOffset, MoveDirs.Down));

        return inputs;
    }

    protected override List<DirectedIO> OnMakeOutputs(int width, int height)
    {
        List<DirectedIO> outputs = new List<DirectedIO>();

        //Add output
        Point outputOffset = new Point(WIDTH, HEIGHT / 2);
        outputs.Add(new DirectedIO(Operation.Result, outputOffset, MoveDirs.Right));

        return outputs;
    }

}
